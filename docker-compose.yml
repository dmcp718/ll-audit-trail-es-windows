version: '3.8'

services:
  elasticsearch-node1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: elasticsearch-node1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    volumes:
      - elasticsearch-data1:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elasticsearch-net
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.0
    container_name: kibana
    volumes:
      - type: bind
        source: .\kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
      - type: bind
        source: .\imports.ndjson
        target: /usr/share/kibana/saved_objects/imports.ndjson
        read_only: true
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch-node1:9200
      - XPACK_SECURITY_ENABLED=false
      - KBN_PATH_CONF=/usr/share/kibana/config
    entrypoint: ["/usr/share/kibana/bin/kibana", "--allow-root"]
    user: kibana
    ports:
      - 5601:5601
    networks:
      - elasticsearch-net
    depends_on:
      - elasticsearch-node1

  kibana-setup:
    image: curlimages/curl:8.00.1
    container_name: kibana-setup
    volumes:
      - type: bind
        source: .\imports.ndjson
        target: /imports.ndjson
        read_only: true
    networks:
      - elasticsearch-net
    depends_on:
      - kibana
    command: >
      sh -c "
        echo 'Waiting for Kibana to start...' &&
        while ! curl -s http://kibana:5601/api/status | grep -q '\"overall\":{\"level\":\"available\"'; do
          sleep 5
        done &&
        echo 'Kibana is up - importing saved objects' &&
        curl -X POST http://kibana:5601/api/saved_objects/_import?overwrite=true -H 'kbn-xsrf: true' --form file=@/imports.ndjson
      "

volumes:
  elasticsearch-data1:

networks:
  elasticsearch-net:
    driver: bridge
